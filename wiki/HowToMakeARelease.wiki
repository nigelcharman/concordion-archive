#summary How to make a release of Concordion

= Introduction =

Using [http://maven.apache.org Maven] and [http://maven.apache.org/plugins/maven-release-plugin maven-release-plugin] we can automate part of the process of a release.

By executing `mvn release:prepare ` we get:
  # a revision in the trunk without -SNAPSHOT
  # a tag named concordion-"version"
  # a revision in the trunk with the new version plus -SNAPSHOT

= Pre-conditions =

All the changes have to be committed to SVN.

= Checking the release =

`mvn release:prepare -DdryRun=true`

During this build, Maven will ask interactively:
{{{
What is the release version for "concordion"? (org.concordion:concordion) 1.3.1: : 1.3.1-RC5
What is SCM release tag or label for "concordion"? (org.concordion:concordion) concordion-1.3.1-RC5: : 
What is the new development version for "concordion"? (org.concordion:concordion) 1.3.2-SNAPSHOT: : 1.3.1-SNAPSHOT
}}}

and then it will execute `mvn clean verify` 
{{{
[INFO] Executing preparation goals - since this is simulation mode it is running against the original project, not the rewritten ones
[INFO] Executing goals 'clean verify'...
[INFO] Executing: mvn clean verify --no-plugin-updates
}}}

= Executing the real preparation =

`mvn release:clean release:prepare`

Maven will ask again for the versions (you can avoid asking again by not using relese:clean). This will actually commit the changes in SVN.
  # a revision in the trunk without -SNAPSHOT
  # a tag named concordion-"version"
  # a revision in the trunk with the new version plus -SNAPSHOT

If something goes wrong, you can rollback using `mvn release:rollback`.


= Not automated yet =

We still need to create the bundle and upload it to the [http://code.google.com/p/concordion/downloads/list Download area] of this site in order to request the deployment in the Maven Central Repository as explained in [http://maven.apache.org/guides/mini/guide-central-repository-upload.html Maven documentation].
